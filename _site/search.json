[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1 - Programming Elegant DataVis with ggplot2",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched in R.\n\npacman::p_load(tidyverse)\n#package name with :: is used as the package has not been loaded in the r environment but you want to use the package functions for your project.\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2 - Creating Elegant Graphics with ggplot2",
    "section": "",
    "text": "Before we get started, it is important for us to ensure that the required R packages have been installed. If yes, we will load the R packages. If they have yet to be installed, we will install the R packages and load them onto R environment.\n\n\npacman::p_load(tidyverse, patchwork, ggthemes, ggrepel, hrbrthemes)\n\n\n\n\n\nThe code chunk below imports exam_data.csv into R environment using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nexam_data <- read_csv('data/Exam_data.csv')\n\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation",
    "title": "Hands-on Exercise 2 - Creating Elegant Graphics with ggplot2",
    "section": "Beyond ggplot2 Annotation",
    "text": "Beyond ggplot2 Annotation\nOne of the challenge in plotting statistical graph is annotation, especially with large number of data points.\n\nggplot(data = exam_data,\n       aes(x = MATHS, y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = 'lm', size = 0.5) +\n  geom_label(aes(label = ID), hjust = 0.5, vjust = -0.5) +\n  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +\n  ggtitle(\"English Scores vs Maths Scores for Primary 3\")\n\n\n\n\n\nWorking with ggrepel\nggrepel is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text. We simply replace geom_text() by geom_text_repel() and geom_label() by geom_label_repel.\n\nggplot(data = exam_data,\n       aes(x = MATHS, y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = 'lm', size = 0.5) +\n  geom_label_repel(aes(label = ID), hjust = 0.5, vjust = -0.5) +\n  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +\n  ggtitle(\"English Scores vs Maths Scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "title": "Hands-on Exercise 2 - Creating Elegant Graphics with ggplot2",
    "section": "Beyond ggplot2 Themes",
    "text": "Beyond ggplot2 Themes\nggplot2 comes with eight built-in themes, they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20, boundary = 100, color = \"grey25\", fill = \"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Math Scores\")\n\n\n\n\n\nWorking with ggtheme package\nggthemes provides 'ggplot2' themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, 'Stata', 'Excel', and The Wall Street Journal, among others.\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20, boundary = 100, color = \"grey25\", fill = \"grey90\") +\n  theme_economist() +\n  ggtitle(\"Distribution of Math Scores\")\n\n\n\n\n\n\nWorking with ggtheme package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20, boundary = 100, color = \"grey25\", fill = \"grey90\") +\n  theme_ipsum() +\n  ggtitle(\"Distribution of Math Scores\")\n\n\n\n\nWe use -\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and\ngrid argument is used to remove the x-axis grid lines.\n\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20, boundary = 100, color = \"grey25\", fill = \"grey90\") +\n  ggtitle(\"Distribution of Math Scores\") +\n  theme_ipsum(axis_title_size = 18, base_size = 15, grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-facet",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-facet",
    "title": "Hands-on Exercise 2 - Creating Elegant Graphics with ggplot2",
    "section": "Beyond ggplot2 facet",
    "text": "Beyond ggplot2 facet\nIn this section, we learn how to create composite plot by combining multiple graphs. First, lets create three statistical graphics.\n\np1 <- ggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20, boundary = 100, color = \"grey25\", fill = \"grey90\") + \n  coord_cartesian(xlim = c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data = exam_data, aes(x = ENGLISH)) +\n  geom_histogram(bins = 20, boundary = 100, color = \"grey25\", fill = \"grey90\") + \n  coord_cartesian(xlim = c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", size = 0.5) + \n  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +\n  ggtitle(\"English Scores vs Maths Scores for Primary 3\")\n\n\nCreating Composite Graphics: pathwork methods\nIt is not unusual that somtimes multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions that provide functions to compose figure with multiple graphs. In this section, we use patchwork. Patchwork package has a very simple syntax where we can create layouts easily. Here's the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign \\\n\n\np1 + p2 / p3\n\n\n\n\n| will place the plots beside each other, while / will stack them.\n\n(p1 / p2) | p3\n\n\n\n\npatchwork also provides auto-tagging capabilities, in order to identify subplots in text.\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\nPlotting patchwork with ggtheme\n\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist()\n\n\n\n\nBesides providing functions to place plots next to each other based on the provided layout, with inset_element() of patchwork, we can place one or several plots and graphic elements freely on top or below another plot.\n\np3 + inset_element(p2, left = 0.02, bottom = 0.7, right = 0.5, top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "pacman::p_load(dplyr, ggiraph, ggplot2, ggthemes, ggrepel, gganimate, patchwork, hrbrthemes, plotly, DT, RColorBrewer, gridExtra, extrafont, tidyverse, gifski, gapminder, readxl, rPackedBar)\n\n\n\n\nUsing read_csv() of readr package, we import Exam_data.csv into R.\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Interactive Data Visualisation - ggiraph methods",
    "text": "Interactive Data Visualisation - ggiraph methods\n\nggiraph is an html widget and a ggplot2 extension. It allows ggplot graphics to be interactive.\nInteractive is made with ggplot geometries that can understand three arguments:\n\nTooltip: a column of data-sets that contain tooltips to be displayed when the mouse is over elements.\nOnclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked.\nData_id: a column of data-sets that contain an id to be associated with elements.\n\nIf it is used within a Shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides.\n\n\nTooltip effect with tooltip aesthetic\n\np <- ggplot(data=exam_data, aes(x = MATHS)) +\n  \n  geom_dotplot_interactive(aes(tooltip = ID), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +\n  \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p, width_svg = 6, height_svg = 6*0.618)\n\n\n\n\n\nInteractivity: By hovering the mouse pointer on an data point of interest, the student's ID will be displayed.\n\n\nComparing ggplot2 and ggiraph codes\nThe original ggplot2 code chunk.\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5, dotsize = 0.5) +\n  scale_y_continuous(NULL, breaks = NULL)\n\n\n\n\nThe ggiraph code chunk.\n\np <- ggplot(data=exam_data, aes(x = MATHS)) +\n  \n  geom_dotplot_interactive(aes(tooltip = ID), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +\n  \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p, width_svg = 6, height_svg = 6*0.618)\n\n\n\n\n\n\n\nDisplaying multiple information on tooltip\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below.\n\nexam_data$tooltip <- c(paste0(\"Name = \", exam_data$ID, \"\\n Class = \", exam_data$CLASS))\n\np <- ggplot(data=exam_data, aes(x = MATHS)) +\n  \n  geom_dotplot_interactive(aes(tooltip = exam_data$tooltip), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +\n  \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p, width_svg = 8, height_svg = 8*0.618)\n\n\n\n\n\n\n\nCustomising Tooltip style\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\n\ntooltip_css <- \"background-color:white; font-style:bold; color:black;\"\n\np <- ggplot(data=exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(tooltip = ID), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +               \n  \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p, width_svg = 6, height_svg = 6*0.618, options = list(opts_tooltip(css = tooltip_css))) \n\n\n\n\n\n\n\nDisplaying statistics on tooltip\nIn the below example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip <- function(y, ymax, accuracy = .01) \n  {\n  \n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n  \n  } \n\ngg_point <- ggplot(data=exam_data, aes(x = RACE)) +\n  \n  stat_summary(aes(y = MATHS, tooltip = after_stat(tooltip(y, ymax))), fun.data = \"mean_se\", geom = GeomInteractiveCol, fill = \"light blue\") +\n  \n  stat_summary(aes(y = MATHS), fun.data = mean_se, geom = \"errorbar\", width = 0.2, size = 0.2)\n\ngirafe(ggobj = gg_point, width_svg = 8, height_svg = 8*0.618)\n\n\n\n\n\n\n\nHover effect with data_id aesthetic\nCode chunk below show the second interactive feature of ggiraph, namely data_id.\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\np <- ggplot(data=exam_data, aes(x = MATHS)) +\n  \n  geom_dotplot_interactive(aes(data_id = CLASS), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +               \n  \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p, width_svg = 6, height_svg = 6*0.618)      \n\n\n\n\n\n\n\nStyling hover effect\nIn the code chunk below, css codes are used to change the highlighting effect.\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\np <- ggplot(data=exam_data, aes(x = MATHS)) +\n  \n  geom_dotplot_interactive(aes(data_id = CLASS), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +\n  \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p, width_svg = 6,height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\")\n                )\n       )                                        \n\n\n\n\n\n\n\nCombining tooltip and hover effect\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS.\n\np <- ggplot(data=exam_data, aes(x = MATHS)) +\n  \n  geom_dotplot_interactive(aes(tooltip = CLASS, data_id = CLASS), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +               \n  \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p, width_svg = 6, height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n) \n\n\n\n\n\n\n\nClick effect with onclick\nonclick argument of ggiraph provides hotlink interactivity on ther web.\nInteractivity: Web document link with a data object will be displayed on the web browser upon mouse click.\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data, aes(x = MATHS)) +\n  \n  geom_dotplot_interactive(aes(onclick = onclick), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +               \n  \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p, width_svg = 6, height_svg = 6*0.618) \n\n\n\n\n\nNote: click actions must be a string column in the dataset containing valid javascript instructions.\n\n\nCoordinated Multiple Views with ggiraph\nIn order to build a coordinated multiple views, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\np1 <- ggplot(data=exam_data, aes(x = MATHS)) +\n  \n  geom_dotplot_interactive(aes(data_id = ID), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +  \n  \n  coord_cartesian(xlim=c(0,100)) +\n  \n  scale_y_continuous(NULL, breaks = NULL)\n\n\np2 <- ggplot(data=exam_data, aes(x = ENGLISH)) +\n  \n  geom_dotplot_interactive(aes(data_id = ID), stackgroups = TRUE, binwidth = 1, method = \"histodot\") + coord_cartesian(xlim=c(0,100)) +\n  \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(code = print(p1 / p2), width_svg = 6, height_svg = 6, options = list(opts_hover(css = \"fill: #202020;\"), opts_hover_inv(css = \"opacity:0.2;\"))) \n\n\n\n\n\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Interactive Data Visualisation - plotly methods!",
    "text": "Interactive Data Visualisation - plotly methods!\nThere are two ways to create interactive graph by using plotly, they are:\n\nby using plot_ly(), and\nby using ggplotly()\n\n\nCreating an interactive scatter plot: plot_ly() method\nThe code chunk below plots an interactive scatter plot by using plot_ly().\n\nplot_ly(data = exam_data, x = ~MATHS, y = ~ENGLISH)\n\n\n\n\n\n\n\nWorking with visual variable: plot_ly() method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\nInteractivity: Click on the colour symbol at the legend.\n\nplot_ly(data = exam_data, x = ~ENGLISH, y = ~MATHS, color = ~RACE)\n\n\n\n\n\n\n\nChanging colour pallete: plot_ly() method\nIn the code chunk below, colors argument is used to change the default colour palette to ColorBrewel colour palette.\nInteractivity: Click on the colour symbol at the legend.\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE, \n        colors = \"Set1\")\n\n\n\n\n\n\n\nCustomising colour scheme: plot_ly() method\nIn the code chunk below, a customised colour scheme is created. Then, colors argument is used to change the default colour palette to the customised colour scheme.\nInteractivity: Click on the colour symbol at the legend.\n\npal <- c(\"red\", \"purple\", \"blue\", \"green\")\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE, \n        colors = pal)\n\n\n\n\n\n\n\nCustomising tooltip: plot_ly() method\nIn the code chunk below, text argument is used to change the default tooltip.\nInteractivity: Click on the colour symbol at the legend.\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS,\n        text = ~paste(\"Student ID:\", ID, \"<br>Class:\", CLASS),\n        color = ~RACE, \n        colors = \"Set1\")\n\n\n\n\n\n\n\nWorking with layout: plot_ly() method\nIn the code chunk below, layout argument is used to change the default tooltip.\nInteractivity: Click on the colour symbol at the legend.\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS,\n        text = ~paste(\"Student ID:\", ID, \"<br>Class:\", CLASS),  \n        color = ~RACE, \n        colors = \"Set1\") %>%\n  \n  layout(title = 'English Score versus Maths Score ',\n         xaxis = list(range = c(0, 100)),\n         yaxis = list(range = c(0, 100)))\n\n\n\n\n\n\n\nCreating an interactive scatter plot: ggplotly() method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  \n  geom_point(dotsize = 1) +\n  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\nCoordinated Multiple Views with plotly\nCode chunk below plots two scatterplots and places them next to each other side-by-side by using subplot() of plotly package.\n\np1 <- ggplot(data=exam_data, \n              aes(x = MATHS,\n                  y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),            \n        ggplotly(p2))            \n\n\n\n\n\n\n\nCoordinated Multiple Views with plotly\nTo create a coordinated scatterplots, highlight_key() of plotly package is used.\nClick on a data point of one of the scatterplot and see how the corresponding point on the other scatterplot is selected.\n\nd <- highlight_key(exam_data)\np1 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Interactive Data Visualisation - crosstalk methods!",
    "text": "Interactive Data Visualisation - crosstalk methods!\nCrosstalk is an add-on to the htmlwidgets package. It extends html widgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\nInteractive Data Table: DT package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library 'DataTables' (typically via R Markdown or Shiny).\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\nLinked brushing: crosstalk method\n\nd <- highlight_key(exam_data) \np <- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg <- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualization-gganimate-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualization-gganimate-methods",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Animated Data Visualization: gganimate methods",
    "text": "Animated Data Visualization: gganimate methods\ngganimate extends the grammar of graphics as implemented by ggplot2 to include the description of animation. It does this by providing a range of new grammar classes that can be added to the plot object in order to customize how it should change with time.\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time.\nview_*() defines how the positional scales should change along the animation.\nshadow_*() defines how data from other points in time should be presented in the given point in time.\nenter_*()/exit_*() defines how new data should appear and how old data should disappear during the course of the animation.\nease_aes() defines how different aesthetics should be eased during transitions.\n\n\nGetting started\nAdd the following packages in the packages list:\n\ngganimate: An ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant's fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\n\n\n\nImporting the data\n\ncol <- c(\"Country\", \"Continent\")\nglobalPop <- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %>%\n  mutate_each_(funs(factor(.)), col) %>%\n  mutate(Year = as.integer(Year))\n\n\nread_xls() of readxl package is used to import the Excel worksheet.\nmutate_each_() of dplyr package is used to convert all character data type into factor.\nmutate of dplyr package is used to convert data values of Year field into integer.\n\n\n\nBuilding a static population bubble plot\nIn the code chunk below, the basic ggplot2 functions are used to create a static bubble plot.\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\nBuilding the animated bubble plot\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       #<<\n  ease_aes('linear')            #<<"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#visualising-large-data-interactively",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#visualising-large-data-interactively",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Visualising Large Data Interactively",
    "text": "Visualising Large Data Interactively\nFor the purpose of this hands-on exercise, two data sets will be used. They are:\n\nGDP.csv provides GDP, GDP per capita and GDP PPP data for world countries from 2000 to 2020. The data was extracted from World Development Indicators Database of World Bank.\nWorldCountry.csv provides a list of country names and the continent they belong to extracted from Statistics Times.\nWrite a code chunk to import both data sets by using read_csv() of readr package.\n\n\nGDP <- read_csv(\"data/GDP.csv\")\nWorldCountry <- read_csv(\"data/WorldCountry.csv\")\n\n\nData preparation\nBefore programming the data visualization, it is important for us to reshape, wrangle and transform the raw data to meet the data visualization need.\nCode chunk below performs following tasks:\n\nmutate() of dplyr package is used to convert all values in the 202 field into numeric data type.\nselect() of dplyr package is used to extract column 1 to 3 and Values field.\npivot_wider() of tidyr package is used to split the values in Series Name field into columns.\nleft_join() of dplyr package is used to perform a left-join by using Country Code of GDP_selected and ISO-alpha3 Code of WorldCountry tibble data tables as unique identifier.\n\n\nGDP_selected <- GDP %>%\n  mutate(Values = as.numeric(`2020`)) %>%\n  select(1:3, Values) %>%\n  pivot_wider(names_from = `Series Name`,\n              values_from = `Values`) %>%\n  left_join(y=WorldCountry, by = c(\"Country Code\" = \"ISO-alpha3 Code\"))\n\n\n\nIntroducing packed bar method\n\npacked bar is a relatively new data visualization method introduced by Xan Gregg from JMP.\nIt aims to support the need of visualising skewed data over hundreds of categories.\nThe idea is to support the Focus+Context data visualization principle.\nVisit this JMP Blog to learn more about the design principles of packed bar.\n\n\n\nData Preparation\n\nGDP_selected <- GDP %>%\n  mutate(GDP = as.numeric(`2020`)) %>%\n  filter(`Series Name` == \"GDP (current US$)\") %>%\n  select(1:2, GDP) %>%\n  na.omit()\n\n\n\nBuilding a packed bar by using rPackedBar package\nIn the code chunk below, plotly_packed_bar() of rPackedBar package is used to create an interactive packed bar.\n\np = plotly_packed_bar(\n  input_data = GDP_selected,\n  label_column = \"Country Name\",\n  value_column = \"GDP\",\n  number_rows = 10,\n  plot_title = \"Top 10 countries by GDP, 2020\",\n  xaxis_label = \"GDP (US$)\",\n  hover_label = \"GDP\",\n  min_label_width = 0.018,\n  color_bar_color = \"#00aced\",\n  label_color = \"white\")\nplotly::config(p, displayModeBar = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(dplyr, ggiraph, ggplot2, ggthemes, ggrepel, gganimate, patchwork, hrbrthemes, plotly, DT, RColorBrewer, gridExtra, extrafont, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#reading-the-dataset",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#reading-the-dataset",
    "title": "Hands-on Exercise 4",
    "section": "Reading the dataset",
    "text": "Reading the dataset\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 01",
    "section": "",
    "text": "Getting started with Tableau\nIn this exercise, we use Tableau’s Superstore data for analysis and visualization\nSee below the dashboard of In-Class Exercise 1 -"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "update.packages(checkBuilt = TRUE, ask = FALSE)\n\nInstalling and loading R packages\nTwo packages will be installed and loaded. They are: tidyverse and ggiraph\n\npacman::p_load(ggiraph, tidyverse)\n\nImporting data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nggplot(data=exam_data, #gives you a blank data frame\n       aes(x = MATHS)) + #aesthetic mapping refers to the data column or field you want to plot\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(dplyr, ggiraph, ggplot2, ggstats, ggstatsplot, ggthemes, ggrepel, gganimate, patchwork, hrbrthemes, plotly, DT, RColorBrewer, gridExtra, extrafont, performance, see, readxl, parameters, gtsummary, crosstalk, ggdist, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#reading-the-dataset",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#reading-the-dataset",
    "title": "In-class Exercise 4",
    "section": "Reading the dataset",
    "text": "Reading the dataset\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#working-with-visual-variable-plot_ly-method",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#working-with-visual-variable-plot_ly-method",
    "title": "In-class Exercise 4",
    "section": "Working with visual variable: plot_ly() method",
    "text": "Working with visual variable: plot_ly() method\n\nplot_ly(data = exam_data, x = ~ENGLISH, y= ~MATHS, color = ~RACE)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "In-class Exercise 4",
    "section": "Creating an interactive scatter plot: ggplotly() method",
    "text": "Creating an interactive scatter plot: ggplotly() method\n\n#interactive plot\n\np <- ggplot (data = exam_data, \n             aes(x = MATHS, y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\nggplotly(p)\n\n\n\n\n\n\n#Static plot for comparison\n\nggplot (data = exam_data, \n             aes(x = MATHS, y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "title": "In-class Exercise 4",
    "section": "Two-sample mean test: ggbetweenstats()",
    "text": "Two-sample mean test: ggbetweenstats()\n\nggbetweenstats(data = exam_data, x = GENDER, y = MATHS, type = \"p\", messages = FALSE)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "title": "In-class Exercise 4",
    "section": "Significant Test of Correlation: ggscatterstats()",
    "text": "Significant Test of Correlation: ggscatterstats()\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE\n  )"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#importing-excel-file-readxl-methods",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#importing-excel-file-readxl-methods",
    "title": "In-class Exercise 4",
    "section": "Importing Excel file: readxl methods",
    "text": "Importing Excel file: readxl methods\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \"data\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#multiple-regression-model-using-lm",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#multiple-regression-model-using-lm",
    "title": "In-class Exercise 4",
    "section": "Multiple Regression Model using lm()",
    "text": "Multiple Regression Model using lm()\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-summary-in-a-dataframe-form",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-summary-in-a-dataframe-form",
    "title": "In-class Exercise 4",
    "section": "Model summary in a dataframe form",
    "text": "Model summary in a dataframe form\n\ntbl_regression(model, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n-2,636,783\n-3,150,331, -2,123,236\n<0.001\n    Age_08_04\n-14\n-35, 7.1\n0.2\n    Mfg_Year\n1,315\n1,059, 1,571\n<0.001\n    KM\n-0.02\n-0.03, -0.02\n<0.001\n    Weight\n19\n17, 21\n<0.001\n    Guarantee_Period\n28\n3.8, 52\n0.023\n  \n  \n  \n    \n      1 CI = Confidence Interval"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-checking-for-multi-colinearity",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-checking-for-multi-colinearity",
    "title": "In-class Exercise 4",
    "section": "Model Diagnostic: checking for multi-colinearity",
    "text": "Model Diagnostic: checking for multi-colinearity\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Guarantee_Period  1.04   [1.01, 1.17]         1.02      0.97     [0.86, 0.99]\n        Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n         Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\nHigh Correlation\n\n   Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n     KM 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n Weight 1.41 [1.32, 1.51]         1.19      0.71     [0.66, 0.76]\n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "In-class Exercise 4",
    "section": "Model Diagnostic: Check model for homogeneity of variances",
    "text": "Model Diagnostic: Check model for homogeneity of variances\n\ncheck_h <- check_heteroscedasticity(model)\nplot(check_h)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-complete-check",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-complete-check",
    "title": "In-class Exercise 4",
    "section": "Model Diagnostic: Complete check",
    "text": "Model Diagnostic: Complete check\n\ncheck_model(model)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-regression-parameters-see-methods",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-regression-parameters-see-methods",
    "title": "In-class Exercise 4",
    "section": "Visualising Regression Parameters: see methods",
    "text": "Visualising Regression Parameters: see methods\n\nplot(parameters(model))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "title": "In-class Exercise 4",
    "section": "Visualising Regression Parameters: ggcoefstats() methods",
    "text": "Visualising Regression Parameters: ggcoefstats() methods\n\nggcoefstats(model, output = \"plot\")\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "title": "In-class Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum <- exam_data %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\nmy_sum\n\n# A tibble: 4 × 5\n  RACE        n  mean    sd    se\n  <chr>   <int> <dbl> <dbl> <dbl>\n1 Chinese   193  76.5  15.7  1.13\n2 Indian     12  60.7  23.4  7.04\n3 Malay     108  57.4  21.1  2.04\n4 Others      9  69.7  10.7  3.79\n\n\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.50777 \n    15.69040 \n    1.132357 \n  \n  \n    Indian \n    12 \n    60.66667 \n    23.35237 \n    7.041005 \n  \n  \n    Malay \n    108 \n    57.44444 \n    21.13478 \n    2.043177 \n  \n  \n    Others \n    9 \n    69.66667 \n    10.72381 \n    3.791438"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods-1",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods-1",
    "title": "In-class Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. On this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "The datasets, ‘Population of Males by Age Groups and Planning Areas’ and ‘Population of Females by Age Groups and Planning Areas,’ were sourced from Singapore’s Department of Statistics (SingStat) website. Click on this link for more information.\n\n\n\n\n\n\n\n\nAfter downloading the data, the requisite worksheets were cleaned and organized for analysis. All ‘Planning Area’ sections by ‘Age’ were combined. The process was applied to both ‘Population of Males by Age Groups and Planning Areas’ and ‘Population of Females by Age Groups and Planning Areas’ MS Excel worksheets.\n\n\n\n\nFor better analysis in Tableau, it is preferable to have data organized as long and lean rather than short and wide. Hence, the short and wide data structure in MS Excel worksheets were opened in Tableau, and all the five-year age bands were pivoted for long and lean data structure. This process is done individually for ‘Population of Males by Age Groups and Planning Areas’ and ‘Population of Females by Age Groups and Planning Areas’.\nThe MS Excel worksheet is first loaded to Tableau.\n\nNext, all five-year age bands are selected and pivoted to transform the data structure.\n\nUsing ‘View Data’ option, the long and lean data – for both males and females – is downloaded as CSV files.\n\n\nThe column names retained in each MS Excel worksheets post pivoting were ‘Planning Area’, ‘Subzone’, ‘Age’ (for five-year age bands), ‘Gender’ (Male or Female, depending on the data worksheet), and ‘Population’ (representing the corresponding population count)."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#union-of-two-datasets",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#union-of-two-datasets",
    "title": "Take Home Exercise 1",
    "section": "2.1. Union of two datasets",
    "text": "2.1. Union of two datasets\nAfter loading the MS Excel worksheets (note: Male and Female population worksheets should be saved in the same MS Excel workbook), we use the ‘New Union’ option in Tableau to combine the ‘Population of Males by Age Groups and Planning Areas’ and ‘Population of Females by Age Groups and Planning Areas’. This gives us a combined long and lean data structure by Planning Area, Subzone, Age Groups, Sex, and Population (actuals)."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-new-variables-for-33-panel-charts",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-new-variables-for-33-panel-charts",
    "title": "Take Home Exercise 1",
    "section": "2.2. Creating new variables for 3*3 panel charts",
    "text": "2.2. Creating new variables for 3*3 panel charts\nTo divide the Tableau worksheet into nine panels of 3 by 3 matrix, we created three calculated fields – Index, Column, and Row. The calculated field is created in the working Tableau sheet. Click on the arrow next to the Data field and select Create Calculated Field.\n\nThe formula for these calculated fields are used to derive the logic in the image below.\n Such panelling helps to aesthetically divide nine planning areas in the worksheet and makes the trellis charts both beautiful and insightful."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-new-variables-aggregating-the-female-and-male-population",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-new-variables-aggregating-the-female-and-male-population",
    "title": "Take Home Exercise 1",
    "section": "2.3. Creating new variables aggregating the female and male population",
    "text": "2.3. Creating new variables aggregating the female and male population\nFor the left-side of the trellis chart, we represented the proportion of female population in respective planning areas and on the right-side, we represented the proportion of male population. To do this, we create two conditional calculated fields, one for each female and male."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-region-variable-for-assigning-the-planning-areas",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-region-variable-for-assigning-the-planning-areas",
    "title": "Take Home Exercise 1",
    "section": "2.4. Creating Region variable for assigning the Planning Areas",
    "text": "2.4. Creating Region variable for assigning the Planning Areas\nThe planning areas are geographically distributed into Central Region (including Core Central and Other Central Area), East Region, North-East Region, North Region, and West Region. Based on geographic location, the Planning Areas are assigned their respective Region as follows –\nIF ([Planning Area] = “Bishan” OR [Planning Area] = “Bukit Merah” OR [Planning Area] = “Geylang” OR [Planning Area] = “Kallang” OR [Planning Area] = “Marine Parade” OR [Planning Area] = “Museum” OR [Planning Area] = “Queenstown” OR [Planning Area] = “Simpang” OR [Planning Area] = “Singapore River” OR [Planning Area] = “Southern Islands” OR [Planning Area] = “Straits View” OR [Planning Area] = “Toa Payoh”) THEN “Other C”\nELSEIF ([Planning Area] = “Bukit Timah” OR [Planning Area] = “Downtown Core” OR [Planning Area] = “Marina East” OR [Planning Area] = “Marina South” OR [Planning Area] = “Newton” OR [Planning Area] = “Novena” OR [Planning Area] = “Orchard” OR [Planning Area] = “Outram” OR [Planning Area] = “River Valley” OR [Planning Area] = “Rochor” OR [Planning Area] = “Tanglin”) THEN “Core C”\nELSEIF ([Planning Area] = “Bedok” OR [Planning Area] = “Changi” OR [Planning Area] = “Changi Bay” OR [Planning Area] = “Pasir Ris” OR [Planning Area] = “Paya Lebar” OR [Planning Area] = “Tampines”) THEN “E”\nELSEIF ([Planning Area] = “Central Water Catchment” OR [Planning Area] = “Lim Chu Kang” OR [Planning Area] = “Mandai” OR [Planning Area] = “Sembawang” OR [Planning Area] = “Sungei Kadut” OR [Planning Area] = “Woodlands” OR [Planning Area] = “Yishun”) THEN “N”\nELSEIF ([Planning Area] = “Ang Mo Kio” OR [Planning Area] = “Hougang” OR [Planning Area] = “North-Eastern Islands” OR [Planning Area] = “Punggol” OR [Planning Area] = “Seletar”  OR [Planning Area] = “Sengkang” OR [Planning Area] =  “Serangoon”) THEN “NE”\nELSE “W” END\nCore C - Core Central Region/Central Area, Other C - Other Central Region, N - North Region, E - East Region, NE - North East Region, W - West Region"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-the-trellis-charts",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-the-trellis-charts",
    "title": "Take Home Exercise 1",
    "section": "2.5. Creating the Trellis Charts",
    "text": "2.5. Creating the Trellis Charts\n\nFilter Panel - In the Filter Panel, we first drag the Region Pill and select ‘Core C’ option only. Next we drag the Planning Area pill. Edit the filter criteria as mentioned in the image below to select nine most populous Planning Areas in the Central Area.\n\nColumns and Rows Panel - Drag Column variable (discreet), Females variable (continuous), and Males variable (continuous) in the column panel. Drag Row variable (discreet) and Age variable (discreet) in the row panel.\n\nClick on the arrow of Females pill in the columns panel, and transform the measure into Sum as shown below (repeat the same for the Males pill).\n\nClick on the arrow of SUM(Females) pill in the columns panel, and edit the table calculation as shown below to derive proportions of females across age groups for each area (repeat the same for the SUM(Males) pill).\n\nMarks Panel - In the Marks panel, drag Age Groups to Color, and Planning Area and Index to Details. Next, click on Label in the Marks panel and enable ‘Show Marks Label’ to activate labels. Do this for All, SUM(Females), and SUM(Males)."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#enhancing-the-aesthetics",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#enhancing-the-aesthetics",
    "title": "Take Home Exercise 1",
    "section": "2.6. Enhancing the Aesthetics",
    "text": "2.6. Enhancing the Aesthetics\n\nGrouping the five-year age-bands - We grouped the five-year age bands as follows to condense the groupings to five main buckets. In Section 3.2., we cover the purpose and the definition of grouping the age bands.\n\nReversing the axis of the left-side chart - We click on the Female axis in the worksheet and reverse the axis to achieve the trellis chart. See below the image for reversing the axis. Note, this is done only for the left-side chart.\n\nAnnotating the titles for each Planning Area chart - To mark Planning Area as titles in each of the nine charts, we right click on each panel chart, select the Annotate option, and then select Area option. This offers a text box for annotating that can be used to mark the title for each trellis chart in the nine panels.\n\nMiscellaneous Enhancements - We assign a color palette in the Marks Panel to Age pill, edit the axes start and end points for better readability, eliminate extra grid lines and borders from the worksheet, enhance the title, label, and axes fonts for a clean and beautified trellis chart."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-the-final-dashboard",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-the-final-dashboard",
    "title": "Take Home Exercise 1",
    "section": "2.7. Creating the final dashboard",
    "text": "2.7. Creating the final dashboard\n\nThe ‘Size’ of the dashboard is set to ‘Automatic’ from ‘Fixed’. This helps to adjust the dashboard layout to the viewing screen.\nThe trellis panel chart worksheet is dragged to the dashboard from the ‘Sheets’ panel.\nFrom the ‘Objects’ panel, the ‘Text’ object is dragged below the trellis panel chart to include details. The details cover the description of age buckets for the analysis and the data source."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#choosing-the-planning-area",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#choosing-the-planning-area",
    "title": "Take Home Exercise 1",
    "section": "3.1. Choosing the planning area",
    "text": "3.1. Choosing the planning area\nThe Central Area is the core city centre of Singapore. The area dynamic, vibrant, and the hub for global and financial businesses. The Urban Redevelopment Authority (URA) of Singapore suggests that the area is set to grow in terms of businesses and vibrancy by accommodating a wider diversity of uses, job offerings, and business opportunities for the future economy.1\nGiven the outlook provided by URA, it would be interesting to analyze the current population spread in the Central Area. For this purpose, we look at the proportion of females and males by age groups in the nine most populous planning areas in the Central Area - Tanglin, Bukit Timah, Downtown Core, Newton, Novena, Orchard, Outram, River Valley, and Rochor."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-analysis",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-analysis",
    "title": "Take Home Exercise 1",
    "section": "3.2. Data analysis",
    "text": "3.2. Data analysis\nSingapore’s Statistical department provides population figures by sex across five-year age bands starting from age 0 to age 85 and over. However, we combine these five-year age bands into different buckets. These buckets allow us to see the spread of dependent and working adults across the nine areas. See below the detailed note on the age-buckets –\n\nYoung Dependents – Aged 0 to 14, enrolled in schools, and primarily dependent on their parents. Average spread of female young dependents is 14.3% and that of male young dependents is 14.6% across nine planning areas.\nYoung Work(ing) Group – Aged 15 to 29. The younger folks may have some side income while the older folks have completed their degrees and national service and joined the corporate sector. Average spread of female young work group is 15.6% and that of male young dependents is 13.8% across nine planning areas.\nPrime Work(ing) Group – Aged 30 to 49, mostly married individuals that are now primary providers of the family and have the spirit to grow in their career. Average spread of female prime work group is 33.9% and that of male young dependents is 33% across nine planning areas.\nMature Work(ing) Group – Aged 50 to 69, mostly married individuals, have significant job or business experience and are seeking stability. Average spread of female young work group is 26.6% and that of male young dependents is 29.3% across nine planning areas.\nElderly – Aged 70 and above, mostly retired, maybe partially dependent on primary providers. Average spread of female elderly is 9.7% and that of male young dependents is 9.4% across nine planning areas."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#insights",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#insights",
    "title": "Take Home Exercise 1",
    "section": "3.3. Insights",
    "text": "3.3. Insights\nThe female and male distribution across age groups is largely similar across the nine planning groups. Nevertheless, we do see small differences in the distribution for some of the age groups. Few of them to note are –\nKey Finding 01 -\nWhile the average proportion of Young Dependents is around 14% for both females and males across nine regions, this proportion is only 8% and 7%, respectively, in Downtown Core area. This can likely be attributed to higher presence younger workers2, DINK (double income no kids) families, unmarried individuals, and expatriates residing without families in this area.\nKey Finding 02 -\nThe proportion of Prime Work Group was lowest in Bukit Timah - 29% for both males and females. This may be attributed to relatively lower presence of businesses in this area compared to other eight planning areas and high rental property rates.\nKey Finding 03 -\nDowntown Core, Outram, and Rochor had comparatively higher proportion of female and male elderly population residing in these areas – around 12% to 15%. This can be attributed to highest number of residents being employed in these areas, especially from the elderly group.3"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take Home Exercise 2",
    "section": "",
    "text": "The objective of this exercise is to critique the age-sex population pyramid by nine planning areas trellis chart of one of our peers and offer enhancements in R Studio by using visualization analytics and application best practices taught in lecture 1 and lecture 2."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#original-design",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#original-design",
    "title": "Take Home Exercise 2",
    "section": "1. Original Design",
    "text": "1. Original Design\n\n\n\n\n\nThe trellis chart (butterfly bar chart) used for visualization is good for representing the sex distribution by age-groups in different planning areas.\n\n1.1. Clarity:\n\n1.1.1. Non-descriptive graph title:\nThe criteria for selecting the nine planning areas is unclear from the title. Also, the year of population age-sex pyramid analysis is unclear from the title.\n\n\n1.1.2. No age-band grouping:\nGrouping the 5-year age bands into 10-years or any other grouping would make the y-axis clean and more readable for the viewer.\n\n\n1.1.3. Missing title for age-bands on the y-axis:\nThe y-axis has no title that mentions that the axis represents age-bands for the population.\n\n\n1.1.4. No fixed scale:\nX-axis labels are missing, making it difficult for the viewer to know the figures for male and female population. Also, the x-axis scale across nine panels is not fixed. This makes comparison of information across nine planning regions challenging for the viewer.\n\n\n1.1.5. Missing legend:\nThe legend describing the colour of the bars on the left- and the right-side of the trellis chart is missing. The viewer thus has to assume that the pink bars represent female population and the blue bars represent the male population.\n\n\n1.1.6. No data source information:\nIncluding the data source information enhances the credibility of the trellis chart figures.\n\n\n\n1.2. Aesthetics:\n\n1.2.1. Charts in different sheets:\nThe trellis chart for each of the nine regions have been created in nine different sheets and then paneled together in the Tableau dashboard. This results in creation of y-axis nine times, reducing the dashboard white space for expanding the trellis charts.\n\n\n1.2.2. Missing bar labels:\nHaving labels for the bars enhances the readability for the viewer. Hence, including labels can be good practice, especially when there are many bars in the trellis charts.\n\n\n1.2.3. Enhanced age axis:\nCurrently, the labels for the age axis are generic (i.e. they are same as provided by the data source) and not enhanced for aesthetics. Editing the axis labels for better readability can beautify the trellis chart.\n\n\n1.2.4. Non-supportive grid lines:\nAs population labels are missing on the x-axis, the grid lines in the trellis charts are redundant as they provide not supportive information."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#proposed-design",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#proposed-design",
    "title": "Take Home Exercise 2",
    "section": "2. Proposed Design",
    "text": "2. Proposed Design\n\n2.1. The sketch:\nThe sketch is the design for the age-sex population pyramid for one of the chosen nine planning areas. The chart will be replicated and modified for the rest of the other eight planning areas. The sketch details the enhancements to the original chart design.\n\n\n\n2.2. Getting started:\n\n2.2.1. Installing the necessary packages:\nTo start using ggplot2, ggiraph, and tidyverse packages for analysis and visualization, we load the libraries using the pacman package and p_load function in R Studio. We load other packages as well to support formatting of the ggplot.\n\npacman::p_load(dplyr, ggiraph, ggplot2, patchwork, ggthemes, hrbrthemes, ggrepel, RColorBrewer, gridExtra, extrafont, tidyverse)\n\n\nfont_import()\nloadfonts(device = \"win\")\n\n\n\n2.2.2. Importing the data:\nNext, we import the Age-Sex Population Data of Singapore for data manipulation and creating the trellis chart for the nine planning areas.\n\nPopulation_data <- read_csv(\"data/TH02_AgeSexPop.csv\")\n\nRows: 1980 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): Sex, Planning Area, Age Group, Pop_Proportion\ndbl (1): Population\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n2.3. Data wrangling:\nStep 1 - Combining the age-bands\nWe regroup the data into ten-year age bands from the five-year age bands. We do this to minimize the level of details for the viewer. This helps to create a clean, condensed yet informational chart that is comparatively easier, than the detailed chart, for the viewer to comprehend.\n\nPopulation_data$Age_groups <- with(Population_data, \n                                   dplyr::case_when(`Age Group` %in% c(\"0 - 4\", \"5 - 9\") ~ '0 - 9',\n                                               `Age Group` %in% c(\"10 - 14\", \"15 - 19\") ~ '10 - 19',\n                                               `Age Group` %in% c(\"20 - 24\", \"25 - 29\") ~ '20 - 29',\n                                               `Age Group` %in% c(\"30 - 34\", \"35 - 39\") ~ '30 - 39',\n                                               `Age Group` %in% c(\"40 - 44\", \"45 - 49\") ~ '40 - 49',\n                                               `Age Group` %in% c(\"50 - 54\", \"55 - 59\") ~ '50 - 59',\n                                               `Age Group` %in% c(\"60 - 64\", \"65 - 69\") ~ '60 - 69',\n                                               `Age Group` %in% c(\"70 - 74\", \"75 - 79\") ~ '70 - 79',\n                                               `Age Group` %in% c(\"80 - 84\", \"85 & Over\") ~ '80+'))\n\nStep 2 - Selecting the planning areas\nAs per the problem statement, we need to select nine planning areas of Singapore and present the age-sex population pyramid for the user. For this exercise, we select the top nine most populous planning areas of Singapore in 2022.\nStep 3 - Creating a data subset\nBased on the chosen nine planning areas, we create a subset from the main dataset. Such a subset makes it easy to further wrangle and visualize the data using ggplot2 and tidyverse.\n\ndata_PA <- Population_data %>%\n  group_by(`Planning Area`) %>%\n  summarise(sum_pop = sum(Population), .groups = 'drop') %>%\n  arrange(sum_pop,.by_group = TRUE) %>%\n  top_n(9)\n\nSelecting by sum_pop\n\ndata_PA\n\n# A tibble: 9 × 2\n  `Planning Area` sum_pop\n  <chr>             <dbl>\n1 Choa Chu Kang    174430\n2 Ang Mo Kio       174920\n3 Yishun           202060\n4 Sengkang         206730\n5 Hougang          222450\n6 Woodlands        250270\n7 Tampines         261300\n8 Jurong West      272810\n9 Bedok            289850\n\n\n\ndata_top9 <- Population_data %>% filter(`Planning Area` %in% c(\"Choa Chu Kang\", \"Ang Mo Kio\", \"Yishun\", \"Sengkang\", \"Hougang\", \"Woodlands\", \"Tampines\", \"Jurong West\",\"Bedok\"))\n\nstr(data_top9)\n\nspc_tbl_ [324 × 6] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Sex           : chr [1:324] \"Female\" \"Female\" \"Female\" \"Female\" ...\n $ Planning Area : chr [1:324] \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" ...\n $ Age Group     : chr [1:324] \"0 - 4\" \"5 - 9\" \"10 - 14\" \"15 - 19\" ...\n $ Population    : num [1:324] 3310 3790 4100 4600 5180 5810 6450 6890 7100 6670 ...\n $ Pop_Proportion: chr [1:324] \"3.65%\" \"4.18%\" \"4.52%\" \"5.07%\" ...\n $ Age_groups    : chr [1:324] \"0 - 9\" \"0 - 9\" \"10 - 19\" \"10 - 19\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Sex = col_character(),\n  ..   `Planning Area` = col_character(),\n  ..   `Age Group` = col_character(),\n  ..   Population = col_double(),\n  ..   Pop_Proportion = col_character()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\n\n\n2.4. Final outcome:\nWe use ggplot2 attributes to visualize the data and modify them to meet our sketch design. This helps us to create enhanced version of the initial design.\n\ndata_top9 <- data_top9 %>% mutate(tooltip_text = paste0(\"Population actuals \", data_top9$Population, \"\\n\", \"Population Proportion \", data_top9$Pop_Proportion))\n\npp <- ggplot(data = data_top9, aes(x = Age_groups, y = Population, fill = Sex, )) +\n  \n  geom_bar(data = data_top9 %>% filter(Sex == \"Male\"),\n           stat = \"identity\", position = \"identity\") +\n\n#, aes(tooltip = tooltip_text, data_id = Age_groups)) \n                            \n  \n  geom_bar(data = data_top9 %>% filter(Sex == \"Female\"),\n           stat = \"identity\",\n           position = \"identity\",\n           mapping = aes(y = -(Population))) +\n  \n  \n  labs (x = \"Age Group\", y = \"Population in 000s\",  title = str_wrap(\"Age-Sex Pyramid of the 9 most populous planning areas in Singapore, June 2022\", width = 90), caption = \"Source: Department of Statistics, Singapore (SingStat)\") + \n\n  scale_y_continuous(breaks = seq(-15000,15000,3000), labels = c(\"15\", \"12\", \"09\", \"06\", \"03\", \"0\", \"03\", \"06\", \"09\", \"12\", \"15\"))+\n  \n  scale_fill_manual(values = c(\"coral3\", \"darkslateblue\"))+\n\n  coord_flip() +\n\n  theme_minimal () +\n\n  theme(text = element_text(family = \"Georgia\"),\n    \n        plot.margin = margin(t=1, r=1, b=1, l=1),\n        plot.title = element_text(size = 10, face = 'bold', hjust = 0.5),\n        plot.caption = element_text(hjust = 0, face = 'italic'),\n        plot.caption.position = 'plot',\n        \n        panel.grid.major.x = element_line(colour = 'grey', linewidth = 0.3, linetype = \"dashed\"),\n        panel.grid.major.y = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        panel.grid.minor.y = element_blank(),\n        \n        axis.line = element_line(color = 'grey'),\n        axis.title = element_text(size = 8),\n        axis.title.y = element_text(angle = 0, vjust = 1.03),\n        axis.text = element_text(size = 6),\n        axis.ticks.y = element_line(color = 'grey'),\n        axis.ticks.x = element_line('grey'),\n        \n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6)) +\n  \n  # creating a facet wrap for each region\n  facet_wrap(~`Planning Area`, ncol = 3) \n\npp\n\n\n\n#pp2 <- girafe(ggobj = pp)\n#if(interactive()) print(pp2)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#the-learning",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#the-learning",
    "title": "Take Home Exercise 2",
    "section": "3. The learning",
    "text": "3. The learning\nEvaluating my peer’s visualization task, helped me learn by putting myself in the viewer’s shoes. Small design enhancements can improve the clarity and the beauty of the charts and make the chart more informative. This exercise also helped me strengthen my skills in R by using the packages such as ggplot2 and tidyverse. Learning these packages is imperative for me as these packages can help me become an efficient and an effective data analyzer and visualizer."
  }
]